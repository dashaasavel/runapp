syntax = "proto2";

package com.dashaasavel.runservice.api;

import "google/protobuf/empty.proto";
import "date.proto";

service PlanService {
  // создает, отдает на фронт, сохраняет в кэш (пока что просто мапу)
  rpc CreatePlan(CreatePlan.Request) returns (CreatePlan.Response);
  // сохраняет план из мапы
  rpc SavePlan(SavePlan.Request) returns (google.protobuf.Empty);
  // получает из базы(mongoDB + postgreSQL) план
  rpc GetPlan(GetPlan.Request) returns (GetPlan.Response);
  // удаляет план из базы
  rpc DeletePlan(DeletePlan.Request) returns (google.protobuf.Empty);
}

message CreatePlan {
  message Request {
    optional PlanInfo planInfo = 1;
  }
  message Response {
    repeated Training trainings = 1;
  }
}

message SavePlan {
  message Request {
    optional PlanIdentifier planIdentifier = 1;
  }
}

message GetPlan {
  message Request {
    optional PlanIdentifier planIdentifier = 1;
  }
  message Response {
    optional Plan plan = 1;
  }
}

message DeletePlan {
  message Request {
    optional PlanIdentifier planIdentifier = 1;
  }
}

message Plan {
  optional PlanInfo planInfo = 1;
  repeated Training trainings = 2;
}
message PlanInfo {
  optional PlanIdentifier identifier = 1;
  optional com.dashaasavel.date.api.Date date = 2;
  repeated com.dashaasavel.date.api.DayOfWeek daysOfWeek = 3;
  optional int32 longRunDistance = 4;
}

message Training {
  optional TrainingBody body = 1;
  optional int32 distance = 2;
  optional SpeedRunningInfo speedRunningInfo = 3;
}

message TrainingBody {
  optional int32 trainingNumber = 1;
  optional int32 weekNumber = 2;
  optional TrainingType type = 3;
  optional com.dashaasavel.date.api.Date date = 4;
}

enum TrainingType {
    LONG_DISTANCE = 0;
    REGULAR_RUN = 1;
    GYM = 2;
    SPEED_RUNNING = 3;
    COMPETITION = 4;
}

enum CompetitionRunType {
  MARATHON = 0;
  HALF_MARATHON = 1;
  TEN_KILOMETERS = 2;
}

message SpeedRunningInfo {
  optional int32 repetition = 1;
  optional int32 distanceInMeters = 2;
}

message PlanIdentifier {
  optional int32 userId = 1;
  optional CompetitionRunType type = 2;
}